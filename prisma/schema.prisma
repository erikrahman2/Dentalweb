// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  DOCTOR
  STAFF
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  role         Role     @default(STAFF)
  createdAt    DateTime @default(now())
  visits       Visit[] @relation("createdVisits")
  doctorVisits Visit[] @relation("doctorVisits")
}

model ClinicInfo {
  id          String   @id @default(cuid())
  name        String
  address     String
  phone       String?
  email       String?
  description String? @db.Text
  updatedAt   DateTime @updatedAt
}

model Service {
  id                   String   @id @default(cuid())
  name                 String   @unique
  description          String? @db.Text
  highlightDescription String? @db.Text
  imageUrl             String?
  price                Decimal
  category             String?
  isActive             Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  visitServices        VisitService[]
}

model Visit {
  id            String   @id @default(cuid())
  date          DateTime @default(now())
  patientName   String
  category      String?
  price         Decimal  @default(0) @db.Decimal(10, 2)
  discount      Decimal  @default(0) @db.Decimal(10, 2)
  total         Decimal  @db.Decimal(10, 2)
  paymentMethod String?
  status        String   @default("paid")
  notes         String?

  services    VisitService[]
  
  createdBy       User?   @relation("createdVisits", fields: [createdByUserId], references: [id])
  createdByUserId String?
  
  doctor          User?   @relation("doctorVisits", fields: [doctorId], references: [id])
  doctorId        String?

  @@index([date])
  @@index([category])
  @@index([createdByUserId])
  @@index([doctorId])
}

model VisitService {
  id          String   @id @default(cuid())
  visitId     String
  serviceId   String?
  quantity    Int      @default(1)
  customName  String?
  customPrice Decimal? @db.Decimal(10, 2)
  
  visit   Visit    @relation(fields: [visitId], references: [id], onDelete: Cascade)
  service Service? @relation(fields: [serviceId], references: [id])
  
  @@index([visitId])
  @@index([serviceId])
}